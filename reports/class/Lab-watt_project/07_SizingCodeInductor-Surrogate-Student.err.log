Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
#Variables d'optimisation
e_D=1e-3 # [m] airgap
J=50 # [A/mmÂ²] current density


# Vector of parameters

parameters = scipy.array((e_D,J))

# Initial characteristics before optimization 
print("-----------------------------------------------")
print("Initial characteristics before optimization :")

SizingCode(parameters, 'Prt')
print("-----------------------------------------------")

# optimization with SLSQP algorithm
contrainte=lambda x: SizingCode(x, 'Const')
objectif=lambda x: SizingCode(x, 'Obj')
result = scipy.optimize.fmin_slsqp(func=objectif, x0=parameters, 
                                   bounds=[(1e-3,1e-1),(1,50)],
                                   f_ieqcons=contrainte, iter=100, acc=1e-12)

# Final characteristics after optimization 
print("-----------------------------------------------")
print("Final characteristics after optimization :")

SizingCode(result, 'Prt')
print("-----------------------------------------------")

------------------

----- stderr -----
/tmp/ipykernel_2483/3395251727.py:8: DeprecationWarning: scipy.array is deprecated and will be removed in SciPy 2.0.0, use numpy.array instead
  parameters = scipy.array((e_D,J))
----- stdout -----
-----------------------------------------------
Initial characteristics before optimization :
* Optimisation variables:
           Airgap e/D = 0.001
           Current dendity J = 50
* Components characteristics:
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[3], line 14[0m
[1;32m     11[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124m-----------------------------------------------[39m[38;5;124m"[39m)
[1;32m     12[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mInitial characteristics before optimization :[39m[38;5;124m"[39m)
[0;32m---> 14[0m [43mSizingCode[49m[43m([49m[43mparameters[49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mPrt[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m     15[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124m-----------------------------------------------[39m[38;5;124m"[39m)
[1;32m     17[0m [38;5;66;03m# optimization with SLSQP algorithm[39;00m

Cell [0;32mIn[2], line 54[0m, in [0;36mSizingCode[0;34m(param, arg)[0m
[1;32m     52[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124m           Current dendity J = [39m[38;5;132;01m%.2g[39;00m[38;5;124m"[39m[38;5;241m%[39m (J))
[1;32m     53[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124m* Components characteristics:[39m[38;5;124m"[39m)
[0;32m---> 54[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124m           Core (2) mass = [39m[38;5;132;01m%.2f[39;00m[38;5;124m kg[39m[38;5;124m"[39m [38;5;241m%[39m ([38;5;241m2[39m[38;5;241m*[39m[43mM_core[49m))
[1;32m     55[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124m           Coil mass = [39m[38;5;132;01m%.2f[39;00m[38;5;124m kg[39m[38;5;124m"[39m [38;5;241m%[39m M_copper)
[1;32m     56[0m [38;5;28mprint[39m([38;5;124m"[39m[38;5;124m           Core dimensions = [39m[38;5;132;01m%.1f[39;00m[38;5;124m (diameter) x [39m[38;5;132;01m%.1f[39;00m[38;5;124m (heigth) mm[39m[38;5;124m"[39m[38;5;241m%[39m((D[38;5;241m*[39m[38;5;241m1e3[39m,[38;5;241m2[39m[38;5;241m*[39mH[38;5;241m*[39m[38;5;241m1e3[39m)))

[0;31mNameError[0m: name 'M_core' is not defined

